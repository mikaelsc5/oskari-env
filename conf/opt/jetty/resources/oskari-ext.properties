
# set development to false or comment it out to load using minified javascript
# (requires minified version of the javascript to be compiled and servlet init-param to set the version to load)
development=true

# set to true to get database populated with initial demo content
oskari.init.db=false

# Logger implementation - SystemLogger logs into System.out/err, replace with logging implementation of your choice
oskari.logger=fi.nls.oskari.log.SystemLogger

# true all ssl certs/hosts for debugging! configure certs on the server for production
oskari.trustAllCerts=true
# true all ssl certs/hosts for debugging! configure certs on the server for production
oskari.trustAllHosts=true

# path for incoming calls to access map
oskari.map.url=/

# url path to call for ajax requests/action routes
oskari.ajax.url.prefix=/?

# UserService implementation - create own implementation to integrate into actual systems and provide feedback for missing interface methods.
#oskari.user.service=fi.nls.oskari.user.StandaloneUserService // Not needed anymore when using JAAS

# Administrator role - special handling for action routes (deleting map layers and such)
oskari.user.role.admin = Admin

# Configuring search channel implementations for search services.
# Properties are prefixed with 'search.channel.[CHANNEL ID].':
#   className indicates the implementation class
#   other properties are passed on to the implementation class.

# OpenStreetMap search channel settings
search.channel.OPENSTREETMAP_CHANNEL.className=fi.nls.oskari.search.OpenStreetMapSearchChannel
search.channel.OPENSTREETMAP_CHANNEL.service.url=http://nominatim.openstreetmap.org/search

# comma-separated list of search channel ids that should be registered for search service
search.channels=OPENSTREETMAP_CHANNEL

# comma-separated list of id for search channel that will be used (defaulted to) if none are explicitly configured
search.channels.default=OPENSTREETMAP_CHANNEL

# comma-separated list of search channel ids used by GetSearchResult
actionhandler.GetSearchResult.channels=OPENSTREETMAP_CHANNEL


# How many threads are created into a wfs executor thread pool, defaults to 5
#wfsexecutorservice.threadcount=15

# bundles that are added on runtime to view if user has one of configured role
#actionhandler.GetAppSetup.dynamic.bundles = admin-layerselector, admin-layerrights

# Linking dynamic bundles based on user roles
# Properties are named 'actionhandler.GetAppSetup.dynamic.[BUNDLE ID].roles'
#   with value as comma-separated list of role names that should be served the bundle
#actionhandler.GetAppSetup.dynamic.bundle.admin-layerrights.roles = Admin
#actionhandler.GetAppSetup.dynamic.bundle.admin-layerselector.roles = Admin

# Used to configure a template view for publishing maps
view.template.publish=3

# redis
redis.hostname=localhost
redis.port=6379
redis.pool.size=10

##############################
# proxy services
##############################
oskari.proxyservices = print, wfsquery, myplacestile

oskari.proxy.print.url=http://localhost:8250/portti-map-imaging-0.0.1-SNAPSHOT/imaging/service/thumbnail/extent.jsonp
oskari.proxy.print.params=zoomLevel,coord,mapLayers,showMarker,forceCache,noSavedState,pageSize
oskari.proxy.print.header.Content-Type=application/json; charset=UTF-8

oskari.proxy.wfsquery.handler=fi.nls.oskari.service.WFSQueryProxyHandler
oskari.proxy.wfsquery.header.Content-Type=text/xml

oskari.proxy.myplacestile.url=http://localhost:8888/geoserver/wms?CQL_FILTER=
oskari.proxy.myplacestile.handler=fi.nls.oskari.proxy.MyPlacesProxyHandler
oskari.proxy.myplacestile.user=admin
oskari.proxy.myplacestile.pass=geoserver

# My places query url
# MyPlacesBundleHandler.java, GeoServerProxyService.java
myplaces.ows.url=http://localhost:8888/geoserver/oskari/ows?
# MapFullHandler.java, MyPlacesHandler.java
myplaces.wms.url=http://localhost:8888/geoserver/oskari/wms?buffer=128&tiled=yes&tilesorigin=0,0&CQL_FILTER=
myplaces.user=admin
myplaces.password=geoserver
# Base WFS layer id for myplaces (portti_maplayer and portti_wfs_layer tables)
# Find correct id layer later on when my_places wfs layer is inserted
myplaces.baselayer.id=3
# My places namespace
myplaces.xmlns=http://www.oskari.org
# My places namespace prefix
myplaces.xmlns.prefix=oskari

# Supported locales, comma separated and default first
oskari.locales=fi_FI,sv_SE,en_US