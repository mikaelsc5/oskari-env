map $http_upgrade $connection_upgrade {
   default upgrade;
   ''      close;
}

upstream oskariapp {
       server localhost:8082 fail_timeout=60s ;
#       keepalive 16;
}

server {
   listen 80;
   #listen [::]:80;

   root /home/{{ ansible_user_id }}/;
   index index.html index.htm;

   # Make site accessible from http://localhost/
   server_name localhost;

   access_log /data/log/nginx.access_log;
   error_log  /data/log/nginx.error_log  debug;

#  client_max_body_size 800M; # avoid HTTP 413 for large image uploads

   location / {

                if ($query_string ~* "action_route=GetArticlesByTag&tags=karttaikkuna%2Cpikaohje") {
                  rewrite ^ /Oskari/QuickStartGuide-fi.json last;
        }
        if ($query_string ~* "action_route=GetArticlesByTag&tags=kartf%C3%B6nstret%2Csnappguide") {
          rewrite ^ /Oskari/QuickStartGuide-sv.json last;
        }
        if ($query_string ~* "action_route=GetArticlesByTag&tags=map\+window%2Cuser\+guide") {

          rewrite ^ /Oskari/QuickStartGuide-en.json last;
        }

        proxy_pass http://oskariapp/oskari-map/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
                proxy_redirect off;

        }

   # proxy config: http://wiki.nginx.org/JavaServers
   # ws config: http://michieldemey.be/blog/proxying-websockets-with-nginx-and-socket-io/
   location ^~ /transport {
        proxy_pass http://localhost:8082;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
   }

   location ^~ /Oskari {
        expires -1;
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
        # Uncomment to enable naxsi on this location
        # include /etc/nginx/naxsi.rules
   }

   location ^~ /oskari-printout-backend-1.0.1-SNAPSHOT {
        proxy_pass http://localhost:8888;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
   }

   location ^~ /geoserver {
        proxy_pass http://localhost:8888;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
   }

        location /geoserver/web {
           proxy_pass http://localhost:8888;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
        auth_basic           "elfgsadmin";
           auth_basic_user_file conf/htpasswd;
   }


   rewrite ^/geonetwork/srv/(.*)/iso19139.xml http://$http_host/geonetwork/srv/eng/csw?service=CSW&Request=GetRecordById&version=2.0.2&&elementSetName=full&outputSchema=csw:IsoRecord&id=$arg_uuid redirect;

   location ^~ /geonetwork {
        proxy_pass http://localhost:8082;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

   }

   rewrite ^/catalogue.* http://$http_host/Oskari/N_A.html redirect;

}
