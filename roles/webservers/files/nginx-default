map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	root /home/vagrant/;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;

	access_log /data/log/nginx.access_log;
	error_log  /data/log/nginx.error_log  debug;
  
#	client_max_body_size 800M; # avoid HTTP 413 for large image uploads

	location / {
		proxy_pass http://localhost:8082/oskari-map/;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
	}

	# proxy config: http://wiki.nginx.org/JavaServers
	# ws config: http://michieldemey.be/blog/proxying-websockets-with-nginx-and-socket-io/
	location ^~ /transport {
		proxy_pass http://localhost:8082;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}

	location ^~ /Oskari {
		expires -1;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	location ^~ /oskari-printout-backend-1.0.1-SNAPSHOT {
		proxy_pass http://localhost:8888;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
	}

	location ^~ /geoserver {
		proxy_pass http://localhost:8888;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
	}

	rewrite ^/geonetwork/srv/(.*)/iso19139.xml http://$http_host/geonetwork/srv/eng/csw?service=CSW&Request=GetRecordById&version=2.0.2&&elementSetName=full&outputSchema=csw:IsoRecord&id=$arg_uuid redirect;

	location ^~ /geonetwork {
		proxy_pass http://localhost:8082;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
	}

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;    
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/html;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		#auth_basic            "Restricted";
#		#auth_basic_user_file  /etc/nginx/registry.htpasswd;
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}