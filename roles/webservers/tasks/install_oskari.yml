---
# http://www.tomaz.me/2013/10/14/solution-for-ansible-git-module-getting-stuck-on-clone.html


- name: install graphicsmagick
  portage: package={{item}} state=present sync=yes update=yes
  with_items:
    - media-gfx/graphicsmagick
  sudo: yes
  when: ansible_distribution == 'Gentoo'

- name: Install graphicsmagick
  portage: package={{item}} state=present sync=yes update=yes
  with_items:
    - media-libs/libpng
    - media-gfx/graphicsmagick
  sudo: yes
  when: ansible_distribution == 'Gentoo'

- name: Install graphicsmagick
  apt: pkg=graphicsmagick state=latest install_recommends=yes
  sudo: yes
  when: ansible_distribution == 'Ubuntu'


- name: Clone oskari-server from github
  git: repo=https://github.com/nls-oskari/oskari-server.git
       dest={{oskari_path}}/oskari-server
       version=develop

- name: Clone oskari from github
  git: repo=https://github.com/nls-oskari/oskari.git
       dest={{oskari_path}}/Oskari
       version=develop

- name: Install npm packages
  npm: path={{oskari_path}}/Oskari/tools

- name: Link node modules .bin to allow global access
  shell:
    ln -s {{oskari_path}}/Oskari/tools/node_modules/.bin/* .
    chdir=/usr/local/bin/
    creates=/usr/local/bin/grunt
  sudo: yes


- name: build oskari frontend distribution files
  shell:
    rm -rf ../dist/{{ oskari_version }};
    grunt release:{{ oskari_version }}:{{ oskari_minifierAppSetups }}
    chdir={{oskari_path}}/Oskari/tools
  when: oskari_development == false
  sudo: yes

- name: set postgres db properties
  copy: src=conf/postgres-db.properties dest={{oskari_path}}/oskari-server/content-resources/src/main/resources/db.properties

#- name: add custom filter base properties
#  copy: src=conf/filter-base.properties dest={{oskari_path}}/oskari-server/servlet-map/filter/

- name: build and deploy oskari-map
  shell:
    mvn clean install -P{{ oskari_mvn_profile }} &&
    sudo cp webapp-map/target/oskari-map.war /opt/jetty-hightide/webapps/
    chdir={{oskari_path}}/oskari-server/
    creates=/opt/jetty-hightide/webapps/oskari-map.war


- name: create db
  shell:
    mvn clean install exec:java -Doskari.dropdb=true -Doskari.setup={{ oskari_db_setup }} && touch /home/{{ansible_ssh_user}}/postgres-db-create
    chdir={{oskari_path}}/oskari-server/content-resources
    creates=/home/{{ansible_ssh_user}}/postgres-db-create

- name: add myplaces triggers
  shell:
    /usr/bin/psql -d {{ db_name }} -f trigger-myplaces.sql && touch myplaces-trigger-create
    chdir={{oskari_path}}/oskari-server/content-resources/src/main/resources/sql/PostgreSQL/
    creates=/home/{{ansible_ssh_user}}/myplaces-trigger-create

- name: build and deploy transport
  shell:
    mvn clean install -f transport-pom.xml -DskipTests &&
    sudo cp webapp-transport/target/transport-0.0.1.war /opt/jetty-hightide/webapps/transport.war
    chdir={{oskari_path}}/oskari-server/
    creates=/opt/jetty-hightide/webapps/transport.war
