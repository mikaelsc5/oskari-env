---
# file: roles/common/tasks/main.yml
#######################################################################
# Postgresql - postgres (PostgreSQL) 9.3.2 & PostGIS - 2.1
# #####################################################################

#https://groups.google.com/forum/#!topic/ansible-project/TBgl454CQKQ
- name: Ensure PGDG Yum repo is installed
  shell:
    rpm -Uvh http://yum.postgresql.org/9.3/redhat/rhel-6-x86_64/pgdg-centos93-9.3-1.noarch.rpm
    creates=/etc/yum.repos.d/pgdg-93-centos.repo
  sudo: yes
  when: ansible_distribution == 'CentOS'

- name: Add PostgreSQL repo key
  apt_key: url=http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc state=present
  sudo: yes
  when: ansible_distribution == 'Ubuntu'

- name: Add PostgreSQL repo
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main'
  sudo: yes
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'

- name: Add PostgreSQL repo
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main'
  sudo: yes
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'precise'


- name: Install PostgreSQL
  yum: name={{item}} state=latest
  with_items:
    - postgresql93
    - postgresql93-server
    - postgresql93-libs
    - postgresql93-contrib
  sudo: yes
  when: ansible_distribution == 'CentOS'

- name: Install PostGIS
  yum: name={{item}} state=latest
  with_items:
    - postgis2_93
    - postgis2_93-client
    - proj
    - libselinux-python
  sudo: yes
  when: ansible_distribution == 'CentOS'

- name: Install PostgreSQL and PostGIS
  apt: pkg={{item}} state=latest update_cache=true
  with_items:
    - postgresql-9.3-postgis-2.1
    - postgresql-contrib-9.3
  sudo: yes
  when: ansible_distribution == 'Ubuntu'

- name: Initiate database
  command: service postgresql-9.3 initdb
    creates=/var/lib/pgsql/9.3/data/postgresql.conf
  sudo: yes
  when: ansible_distribution == 'CentOS'
# Not needed for Ubuntu, already part of PPA installation


- name: Copy valid pg_hba.conf
  template: src=pg_hba.conf.j2 dest=/var/lib/pgsql/9.3/data/pg_hba.conf
  sudo: yes
  when: ansible_distribution == 'CentOS'

- name: Copy valid pg_hba.conf
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/9.3/main/pg_hba.conf
  sudo: yes
  when: ansible_distribution == 'Ubuntu'


- name: Listen to all addresses
  lineinfile:
    dest=/var/lib/pgsql/9.3/data/postgresql.conf
    regexp="^#listen_addresses = 'localhost'"
    line="listen_addresses = '*'"
    backrefs=yes
    state=present
  sudo: yes
  when: ansible_distribution == 'CentOS'

- name: Listen to all addresses
  lineinfile:
    dest=/etc/postgresql/9.3/main/postgresql.conf
    regexp="^#listen_addresses = 'localhost'"
    line="listen_addresses = '*'"
    backrefs=yes
    state=present
  sudo: yes
  when: ansible_distribution == 'Ubuntu'


- name: restart postgresql-9.3
  service: name=postgresql-9.3 state=restarted enabled=yes
  sudo: yes
  when: ansible_distribution == 'CentOS' 

- name: restart postgresql
  service: name=postgresql state=restarted enabled=yes
  sudo: yes
  when: ansible_distribution == 'Ubuntu'

- name: upload db dump
  shell:
    /usr/bin/psql -f {{ db_dump_path }} postgres && touch postgis-extension-create && touch geonetwork-postgis-extension-create
    chdir=/home/{{ ansible_user_id }}/
    creates=/home/{{ ansible_user_id }}/postgis-extension-create
  when: restore_dump == True


- name: create the postgresql user for application
  postgresql_user:
    name={{ db_username }}
    password={{ db_password }}
    role_attr_flags=SUPERUSER,CREATEROLE,CREATEDB,INHERIT,LOGIN;
  sudo: yes
  sudo_user: postgres
  when: restore_dump != True

- name: create the postgresql database for application
  postgresql_db:
    name={{ db_name }}
    owner={{ db_username }}
    encoding="UTF8"
    state=present
  sudo: yes
  sudo_user: postgres
  when: restore_dump != True

- name: create postgis EXTENSION
  shell:
    /usr/bin/psql -d {{ db_name }} -c "CREATE EXTENSION IF NOT EXISTS postgis;" && touch postgis-extension-create
    chdir=/home/{{ ansible_user_id }}/
    creates=/home/{{ ansible_user_id }}/postgis-extension-create
  when: restore_dump != True


- name: create the postgresql database for geonetwork
  postgresql_db:
    name={{ db_geonetwork_name }}
    owner={{ db_username }}
    encoding="UTF8"
    state=present
  sudo: yes
  sudo_user: postgres
  when: restore_dump != True

- name: create geonetwork postgis EXTENSION
  shell:
    /usr/bin/psql -d {{ db_geonetwork_name }} -c "CREATE EXTENSION IF NOT EXISTS postgis;" && touch geonetwork-postgis-extension-create
    chdir=/home/{{ ansible_user_id }}/
    creates=/home/{{ ansible_user_id }}/geonetwork-postgis-extension-create
  when: restore_dump != True

